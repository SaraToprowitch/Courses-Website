{
  "version": 3,
  "sources": ["../../../../../node_modules/primeng/fesm2022/primeng-badge.mjs"],
  "sourcesContent": ["import * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, Inject, Input, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule } from '@angular/core';\nimport { SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { UniqueComponentId } from 'primeng/utils';\n\n/**\n * Badge Directive is directive usage of badge component.\n * @group Components\n */\nfunction Badge_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 1);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r0.styleClass);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.containerClass())(\"ngStyle\", ctx_r0.style);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.value);\n  }\n}\nclass BadgeDirective {\n  document;\n  el;\n  renderer;\n  /**\n   * Icon position of the component.\n   * @group Props\n   */\n  iconPos = 'left';\n  /**\n   * When specified, disables the component.\n   * @group Props\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(val) {\n    this._disabled = val;\n  }\n  /**\n   * Size of the badge, valid options are \"large\" and \"xlarge\".\n   * @group Props\n   */\n  get size() {\n    return this._size;\n  }\n  set size(val) {\n    this._size = val;\n    if (this.initialized) {\n      this.setSizeClasses();\n    }\n  }\n  /**\n   * Value to display inside the badge.\n   * @group Props\n   */\n  get value() {\n    return this._value;\n  }\n  set value(val) {\n    if (val !== this._value) {\n      this._value = val;\n      if (this.initialized) {\n        let badge = document.getElementById(this.id);\n        if (this._value) {\n          if (DomHandler.hasClass(badge, 'p-badge-dot')) DomHandler.removeClass(badge, 'p-badge-dot');\n          if (String(this._value).length === 1) {\n            DomHandler.addClass(badge, 'p-badge-no-gutter');\n          } else {\n            DomHandler.removeClass(badge, 'p-badge-no-gutter');\n          }\n        } else if (!this._value && !DomHandler.hasClass(badge, 'p-badge-dot')) {\n          DomHandler.addClass(badge, 'p-badge-dot');\n        }\n        badge.innerHTML = '';\n        this.renderer.appendChild(badge, document.createTextNode(this._value));\n      }\n    }\n  }\n  /**\n   * Severity type of the badge.\n   * @group Props\n   */\n  severity;\n  _value;\n  initialized = false;\n  id;\n  _disabled = false;\n  _size;\n  constructor(document, el, renderer) {\n    this.document = document;\n    this.el = el;\n    this.renderer = renderer;\n  }\n  ngAfterViewInit() {\n    this.id = UniqueComponentId() + '_badge';\n    let el = this.el.nativeElement.nodeName.indexOf('-') != -1 ? this.el.nativeElement.firstChild : this.el.nativeElement;\n    if (this._disabled) {\n      return null;\n    }\n    let badge = this.document.createElement('span');\n    badge.id = this.id;\n    badge.className = 'p-badge p-component';\n    if (this.severity) {\n      DomHandler.addClass(badge, 'p-badge-' + this.severity);\n    }\n    this.setSizeClasses(badge);\n    if (this.value != null) {\n      this.renderer.appendChild(badge, this.document.createTextNode(this.value));\n      if (String(this.value).length === 1) {\n        DomHandler.addClass(badge, 'p-badge-no-gutter');\n      }\n    } else {\n      DomHandler.addClass(badge, 'p-badge-dot');\n    }\n    DomHandler.addClass(el, 'p-overlay-badge');\n    this.renderer.appendChild(el, badge);\n    this.initialized = true;\n  }\n  setSizeClasses(element) {\n    const badge = element ?? this.document.getElementById(this.id);\n    if (!badge) {\n      return;\n    }\n    if (this._size) {\n      if (this._size === 'large') {\n        DomHandler.addClass(badge, 'p-badge-lg');\n        DomHandler.removeClass(badge, 'p-badge-xl');\n      }\n      if (this._size === 'xlarge') {\n        DomHandler.addClass(badge, 'p-badge-xl');\n        DomHandler.removeClass(badge, 'p-badge-lg');\n      }\n    } else {\n      DomHandler.removeClass(badge, 'p-badge-lg');\n      DomHandler.removeClass(badge, 'p-badge-xl');\n    }\n  }\n  ngOnDestroy() {\n    this.initialized = false;\n  }\n  static ɵfac = function BadgeDirective_Factory(t) {\n    return new (t || BadgeDirective)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BadgeDirective,\n    selectors: [[\"\", \"pBadge\", \"\"]],\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      iconPos: \"iconPos\",\n      disabled: [i0.ɵɵInputFlags.None, \"badgeDisabled\", \"disabled\"],\n      size: \"size\",\n      value: \"value\",\n      severity: \"severity\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BadgeDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[pBadge]',\n      host: {\n        class: 'p-element'\n      }\n    }]\n  }], () => [{\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.Renderer2\n  }], {\n    iconPos: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: ['badgeDisabled']\n    }],\n    size: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    severity: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Badge is a small status indicator for another element.\n * @group Components\n */\nclass Badge {\n  /**\n   * Class of the element.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Inline style of the element.\n   * @group Props\n   */\n  style;\n  /**\n   * Size of the badge, valid options are \"large\" and \"xlarge\".\n   * @group Props\n   */\n  size;\n  /**\n   * Severity type of the badge.\n   * @group Props\n   */\n  severity;\n  /**\n   * Value to display inside the badge.\n   * @group Props\n   */\n  value;\n  /**\n   * When specified, disables the component.\n   * @group Props\n   */\n  badgeDisabled = false;\n  containerClass() {\n    return {\n      'p-badge p-component': true,\n      'p-badge-no-gutter': this.value != undefined && String(this.value).length === 1,\n      'p-badge-lg': this.size === 'large',\n      'p-badge-xl': this.size === 'xlarge',\n      'p-badge-info': this.severity === 'info',\n      'p-badge-success': this.severity === 'success',\n      'p-badge-warning': this.severity === 'warning',\n      'p-badge-danger': this.severity === 'danger'\n    };\n  }\n  static ɵfac = function Badge_Factory(t) {\n    return new (t || Badge)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Badge,\n    selectors: [[\"p-badge\"]],\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      styleClass: \"styleClass\",\n      style: \"style\",\n      size: \"size\",\n      severity: \"severity\",\n      value: \"value\",\n      badgeDisabled: \"badgeDisabled\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ngClass\", \"class\", \"ngStyle\", 4, \"ngIf\"], [3, \"ngClass\", \"ngStyle\"]],\n    template: function Badge_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, Badge_span_0_Template, 2, 5, \"span\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.badgeDisabled);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgIf, i1.NgStyle],\n    styles: [\"@layer primeng{.p-badge{display:inline-block;border-radius:10px;text-align:center;padding:0 .5rem}.p-overlay-badge{position:relative}.p-overlay-badge .p-badge{position:absolute;top:0;right:0;transform:translate(50%,-50%);transform-origin:100% 0;margin:0}.p-badge-dot{width:.5rem;min-width:.5rem;height:.5rem;border-radius:50%;padding:0}.p-badge-no-gutter{padding:0;border-radius:50%}}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Badge, [{\n    type: Component,\n    args: [{\n      selector: 'p-badge',\n      template: ` <span *ngIf=\"!badgeDisabled\" [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">{{ value }}</span> `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'p-element'\n      },\n      styles: [\"@layer primeng{.p-badge{display:inline-block;border-radius:10px;text-align:center;padding:0 .5rem}.p-overlay-badge{position:relative}.p-overlay-badge .p-badge{position:absolute;top:0;right:0;transform:translate(50%,-50%);transform-origin:100% 0;margin:0}.p-badge-dot{width:.5rem;min-width:.5rem;height:.5rem;border-radius:50%;padding:0}.p-badge-no-gutter{padding:0;border-radius:50%}}\\n\"]\n    }]\n  }], null, {\n    styleClass: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    severity: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    badgeDisabled: [{\n      type: Input\n    }]\n  });\n})();\nclass BadgeModule {\n  static ɵfac = function BadgeModule_Factory(t) {\n    return new (t || BadgeModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: BadgeModule,\n    declarations: [Badge, BadgeDirective],\n    imports: [CommonModule],\n    exports: [Badge, BadgeDirective, SharedModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BadgeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [Badge, BadgeDirective, SharedModule],\n      declarations: [Badge, BadgeDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Badge, BadgeDirective, BadgeModule };\n"],
  "mappings": "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",
  "names": ["document"]
}
